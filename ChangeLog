2009-10-17  Luca Beltrame <einar@heavensinferno.net>

  * api.py: Implementation of a wait parameter to have a configured wait (not
  less than 2 seconds) for each download query. Also, some docstrings have been
  updated.

  * imagewidget.py: No need for two timeouts

  * imagewidget.py: No more enumerations, not needed

  * test_api.py: Unused stuff -=

  * api.py: Better check for the existence of an URL (KIO doesn't support that)
  and also create URLs in a decent way (i.e. not by mindlessly mashing
  strings!)

  * test_api.py: Unit tests working again, yay!

  * ChangeLog: ChangeLog updated.

  * api.py: Verbose -=

  * danbooru_client.py: Fix the progress bar update

  * imagewidget.py: Change table item *again*, this time to something that
  should works, and includes also some nice textual labels.

2009-10-16  Luca Beltrame <einar@heavensinferno.net>

  * ChangeLog: ChngeLog updated.

  * danbooru_client.py: Adapt to the new API module

  * imagewidget.py: Drop KUrlLabel, use a QTableWidget with a custom sizing
  delegate

  * api.py: API module overhauled. Now posts are loaded in a specific class
  that keeps track of the various bits, which in turn leads to simpler code.

2009-10-14  Luca Beltrame <einar@heavensinferno.net>

  * danbooru_client.py: Adapt to the changes in imagewidget.py

  * imagewidget.py: Major rework using QTableWidget

2009-10-12  Luca Beltrame <einar@heavensinferno.net>

  * ChangeLog: Changelog update

  * fetchdialog.py, ui/fetchdialog.ui, ui_fetchdialog.py: Dialog for fetching
  posts.

  * danbooru_client.py: Connect, progress and fetch dialogs. Also, a reset()
  method to reset the central widget in case of multiple fetches.

  * imagewidget.py: Get rid of cruft and bad layouting code.

  * connect_dialog.py: QString does not equal to str() at least in Python 2.x

  * api.py: Add a way to associate the full image URL with the thumbnail. Unit
  tests need huge updates!

2009-10-10  Luca Beltrame <einar@heavensinferno.net>

  * connect_dialog.py: Stupid naming issue fixed

  * api.py: Document why we use a sync call instead of async

  * danbooru_client.py: License change and some fixes

  * test_api.py: Updated unit tests for the API class.

  * ui_connectdialog.py: uic-compiled file for connection dialog

  * ui/connectdialog.ui: Raw UI file for connection dialog

  * danbooruui.rc: Support for the fetch action

  * api.py: Fixes and error reporting. Will need to migrate from
  NetAccess.exists to custom code because it doesn't work reliably with HTTP
  addresses.

  * connect_dialog.py: First implementation of a connect dialog

  * danbooru_client.py: Lots of changes. Config saving, and implementation of
  the first actions

2009-10-09  Luca Beltrame <einar@heavensinferno.net>

  * danbooru_client.py, imagewidget.py: Less cruft

  * danbooru_client.py, imagewidget.py: Proper layouting was just a setter
  away...

  * api.py, danbooru_client.py, imagewidget.py: Layouting that works, still
  ugly but it's a start.

  * danbooru_client.py: Merge

  * ChangeLog, api.py, danbooru_client.py, imagewidget.py, test_api.py: First
  start of a proper visualization. However, QScrollArea doesn't work. Need to
  investigate.

2009-10-06  Luca Beltrame <einar@heavensinferno.net>

  * preferences.py: Add skeleton for configuration dialog. UI file needs to be
  done still.

  * danbooru2nepomuk.py: Simpler code.

  * danbooru2nepomuk.py: Simpler method to know whether Nepomuk is active or
  not.

2009-10-02  Luca Beltrame <einar@heavensinferno.net>

  * danbooru2nepomuk.py: Add a command line tagger. It will also be used to tag
  the downloaded files.

2009-09-26  Luca Beltrame <einar@heavensinferno.net>

  * test_api.py, testapi.py: Renames

  * ChangeLog, danbooru_client.py: Don't forget some changes

  * hashes.py: Add the hash calculation module

  * testapi.py: Proper unit tests for the functions implemented so far.

  * api.py: Some methods cleanup - thank goodness for unit tests!

  * testapi.py: Stub for unit tests for the API.

  * ChangeLog: ChangeLog updated

  * api.py: Add a generic function to download images. Also, add stubs for most
  of the API calls.

  * TODO: Add TODO

  * ChangeLog: Add automatically generated ChangeLog

2009-09-25  Luca Beltrame <einar@heavensinferno.net>

  * api.py: More error checking and URLs for the various API bits

2009-07-30  Luca Beltrame <einar@heavensinferno.net>

  * imagewidget.py: Move the download bits out of the image widget API

  * api.py: Move the downloading mechanics to the API. The GUI should only
  display, not perform lower level operations.

2009-07-27  Luca Beltrame <einar@heavensinferno.net>

  * api.py: Check also that the supplied URL exists.

  * api.py: Re-add KIO support using the proper way (I should read API docs
  better next time!). Thanks to Pino Toscano (pinotree) for the hint.

2009-07-26  Luca Beltrame <einar@heavensinferno.net>

  * danbooru_client.py: Add a KStandardAction for preferences and make a simple
  test. Start of KConfig usage, but I wonder if I should use KConfigXT, however
  there are no real examples using PyKDE.

  * danbooru_client.py: Support for KActions, with a connect action that does
  nothing at the moment.

  * danbooruui.rc: Add XML file for KActions support.

  * api.py, danbooru_client.py, imagewidget.py: Add license information to the
  files

  * .gitignore: Remove unneded files

  * danbooru_client.py, kioslave.py: Split up things. Made the API part almost
  KDE independent (thinking about KUrls..). Now it's time to spice up the
  application.

2009-07-23  Luca Beltrame <einar@heavensinferno.net>

  * api.py, imagewidget.py, kioslave.py: Various changes in the files, more
  tests being done. Moved the API to a separte module

2009-07-22  Luca Beltrame <einar@heavensinferno.net>

  * imagewidget.py: Add a proper widget file. Also, adjust KIO flags so they're
  hidden.

2009-07-19  Luca Beltrame <einar@heavensinferno.net>

  * kioslave.py: Port everything to synchronous download. I don't want to
  overload the services.

  * kioslave.py: Put this in so that next changes will be reverted if needed
